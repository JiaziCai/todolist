{"version":3,"sources":["firebase.js","constants/index.js","helpers/index.js","context/projects-context.js","hooks/index.js","context/selected-project-context.js","components/ProjectOverlay.js","components/TaskDate.js","components/AddTask.js","components/layout/Header.js","components/individualProject.js","components/Projects.js","components/AddProject.js","components/layout/Sidebar.js","components/Checkbox.js","components/Tasks.js","components/layout/Content.js","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","collatedTasks","key","name","collatedTasksExist","selectedProject","find","task","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","id","join","ProjectsContext","createContext","ProjectsProvider","children","useState","projects","setProjects","useEffect","firestore","collection","where","orderBy","get","then","snapshot","allProjects","docs","map","project","data","docId","JSON","stringify","useProjects","Provider","value","useProjectsValue","useContext","SelectedProjectContext","SelectedProjectProvider","setSelectedProject","useSelectedProjectValue","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","className","data-testid","onClick","onKeyDown","tabIndex","role","aria-label","TaskDate","setTaskDate","showTaskDate","setShowTaskDate","moment","format","add","AddTask","showAddTaskMain","showShouldMain","showQuickAddTask","setShowQuickAddTask","setTask","taskDate","showMain","setShowMain","addTask","collatedDate","archived","date","userId","type","onChange","e","target","Header","darkMode","setDarkMode","shouldShowMain","setShouldMain","color","IndividualProject","showConfirm","setShowConfirm","doc","delete","Projects","activeValue","active","setActive","data-doc-id","AddProject","shouldShow","show","setShow","projectName","setProjectName","placeholder","Sidebar","showProjects","setShowProjects","undefined","Checkbox","taskDesc","archiveTask","update","Tasks","tasks","setTasks","archivedTasks","setArchivedTasks","unsubscribe","onSnapshot","newTasks","filter","diff","useTasks","getTitle","getCollatedTitle","document","title","Content","App","darkModeDefault","render","getElementById"],"mappings":"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","file":"static/js/main.a74be992.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = firebase.initializeApp({\n    apiKey: \"AIzaSyDaKVab1IY4jky6LvUnloWzQXBj7iTVjeU\",\nauthDomain: \"todolist-ee33c.firebaseapp.com\",\ndatabaseURL: \"https://todolist-ee33c.firebaseio.com\",\nprojectId: \"todolist-ee33c\",\nstorageBucket: \"todolist-ee33c.appspot.com\",\nmessagingSenderId: \"620969956100\",\nappId: \"1:620969956100:web:ee37537c99e00691357651\",\nmeasurementId: \"G-TE76G0B70C\"\n})\n\nexport {firebaseConfig as firebase};\n\n","export const collatedTasks = [\n    {key: 'INBOX', name: 'Inbox'},\n    {key: 'TODAY', name: 'Today'},\n    {key: 'NEXT_7', name: 'Next Week'}, \n];","\nimport {collatedTasks} from '../constants';\n\nexport const collatedTasksExist = selectedProject => \n    collatedTasks.find(task => task.key === selectedProject);\n\nexport const getTitle = (projects, projectId) => projects.find(project => project.projectId === projectId);\n\nexport const getCollatedTitle = (projects, key) => projects.find(project => project.key === key);\n\nexport const generatePushId = (() => {\n    const PUSH_CHARS =\n      '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n  \n    const lastRandChars = [];\n  \n    return function() {\n      let now = new Date().getTime();\n  \n      const timeStampChars = new Array(8);\n      for (var i = 7; i >= 0; i--) {\n        timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n        now = Math.floor(now / 64);\n      }\n  \n      let id = timeStampChars.join('');\n  \n      for (i = 0; i < 12; i++) {\n        id += PUSH_CHARS.charAt(lastRandChars[i]);\n      }\n  \n      return id;\n    };\n  })();\n","import React, {createContext, useContext} from 'react';\nimport {useProjects} from '../hooks';\n\nexport const ProjectsContext = createContext();\nexport const ProjectsProvider = ({children}) => {\n    const {projects, setProjects} = useProjects();\n\n    return (\n        <ProjectsContext.Provider value={{projects, setProjects}}>\n            {children}\n        </ProjectsContext.Provider>\n    );\n};\n\nexport const useProjectsValue = () => useContext(ProjectsContext);\n\n\n","import {useState, useEffect} from 'react';\nimport {firebase} from '../firebase';\nimport {collatedTasksExist} from '../helpers';\nimport moment from 'moment';\n\n\nexport const useTasks = selectedProject => {\n    const [tasks, setTasks] = useState([]);\n    const [archivedTasks, setArchivedTasks] = useState([]);\n\n    useEffect(() => {\n        let unsubscribe = firebase.firestore().collection('tasks')\n            .where('userId', '==', '1DEPPjvKvny4DZEsH25ur');\n        \n        unsubscribe = selectedProject && !collatedTasksExist(selectedProject) ? \n        (unsubscribe = unsubscribe.where('projectId', '==', selectedProject)) \n        : selectedProject === 'TODAY'\n        ? (unsubscribe = unsubscribe.where('date', '==', moment().format('DD/MM/YYYY')))\n        : selectedProject === 'INBOX' || selectedProject === 0\n        ? (unsubscribe = unsubscribe.where('date', '==', ''))\n        : unsubscribe;\n\n        unsubscribe = unsubscribe.onSnapshot(snapshot => {\n            const newTasks = snapshot.docs.map(task => ({\n                id: task.id,\n                ...task.data(),\n\n            }));\n            setTasks(\n            selectedProject === 'NEXT_7' ? newTasks.filter(task => moment(task.date, 'DD-MM-YYYY').diff(moment(), 'days')\n                <= 7 && task.archived !== true) : newTasks.filter(task => task.archived !== true)\n            );\n            setArchivedTasks(newTasks.filter(task => task.archived !== false));\n        });\n\n        return () => unsubscribe();\n    }, [selectedProject]);\n\n    return { tasks, archivedTasks};\n}\n\nexport const useProjects = () => {\n    const [projects, setProjects] = useState([]);\n\n    useEffect(() => {\n        firebase.firestore().collection('projects').where('userId', '==', '1DEPPjvKvny4DZEsH25ur')\n            .orderBy('projectId').get().then(snapshot => {\n                const allProjects = snapshot.docs.map(project => ({\n                    ...project.data(),\n                    docId: project.id,\n                }));\n\n                if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\n                    setProjects(allProjects);\n                }\n            })\n\n    }, [projects]);\n\n    return { projects, setProjects};\n}","import React, {createContext, useContext, useState} from 'react';\nimport {useProjects} from '../hooks';\n\nexport const SelectedProjectContext = createContext();\nexport const SelectedProjectProvider = ({children}) => {\n    const [selectedProject, setSelectedProject] = useState('INBOX');\n\n    return (\n        <SelectedProjectContext.Provider value={{selectedProject, setSelectedProject}}>\n            {children}\n        </SelectedProjectContext.Provider>\n    );\n};\n\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);\n\n\n","import React from 'react';\n\nimport {useProjectsValue} from '../context';\n\nexport const ProjectOverlay = ({setProject, showProjectOverlay, setShowProjectOverlay}) => {\n    const {projects} = useProjectsValue();\n\n    return (\n        projects && \n        showProjectOverlay && (\n            <div className=\"project-overlay\" data-testid=\"project-overlay\">\n                <ul className=\"project-overlay__list\">\n                    {projects.map(project => (\n                        <li key={project.projectId}\n                            data-testid=\"project-overlay-action\"\n                        >\n                        <div onClick={() => {\n                                setProject(project.projectId);\n                                setShowProjectOverlay(false);\n                            }}\n                            onKeyDown={() => {\n                                setProject(project.projectId);\n                                setShowProjectOverlay(false);\n                            }}\n                            tabIndex={0}\n                            role=\"button\"\n                            aria-label=\"Select the task for project\"\n                            >\n                        {project.name}\n                        </div>\n                        </li>\n                    ))}\n\n                </ul>\n            </div>\n        )\n    )\n}","import React from 'react';\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from 'react-icons/fa';\nimport moment from 'moment';\n\nexport const TaskDate = ({setTaskDate, showTaskDate, setShowTaskDate}) => \n    showTaskDate && (\n        <div className=\"task-date\" data-testid=\"task-date-overlay\">\n            <ul className=\"task-date__list\">\n                <li\n                data-testid=\"task-date-overlay\"\n                >\n                <div onClick={() => {\n                    setShowTaskDate(false);\n                    setTaskDate(moment().format('DD/MM/YYYY'));}}\n                    onKeyDown={() => {\n                    setShowTaskDate(false);\n                    setTaskDate(moment().format('DD/MM/YYYY'));}}\n                    tabIndex={0}\n                    role=\"button\"\n                    aria-label=\"Select today\"\n                    >\n                    <span>\n                        <FaSpaceShuttle />\n                    </span>\n                    <span>Today</span>\n                    </div>\n                </li>\n                <li\n                data-testid=\"task-date-tomorrow\"\n                >\n                <div\n                onClick={() => {\n                    setShowTaskDate(false);\n                    setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\n                }}\n                onKeyDown={() => {\n                    setShowTaskDate(false);\n                    setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\n                }}\n                tabIndex={0}\n                role=\"button\"\n                aria-label=\"Select tomorrow\"\n                >\n                    <span>\n                        <FaSun />\n                    </span>\n                    <span>Tomorrow</span>\n                </div>\n                </li>\n                <li\n                data-testid=\"task-date-next-week\"\n                >\n                <div\n                onClick={() => {\n                    setShowTaskDate(false);\n                    setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\n                }}\n                onKeyDown={() => {\n                    setShowTaskDate(false);\n                    setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\n                }}\n                tabIndex={0}\n                role=\"button\"\n                aria-label=\"Select next week\"\n                >\n                    <span>\n                        <FaRegPaperPlane />\n                    </span>\n                    <span>Next Week</span>\n                </div>\n                </li>\n            </ul>\n        </div>\n    );","import React, {useState} from 'react';\nimport {FaRegListAlt, FaRegCalendarAlt} from 'react-icons/fa';\nimport moment from 'moment';\nimport {firebase} from '../firebase';\nimport {useSelectedProjectValue} from '../context';\nimport Flatted from 'flatted';\nimport { ProjectOverlay } from './ProjectOverlay';\nimport {TaskDate} from './TaskDate';\n\nexport const AddTask = ({\n    showAddTaskMain = true, \n    showShouldMain = false, \n    showQuickAddTask,\n    setShowQuickAddTask,\n}) => {\n    const [task, setTask] = useState('');\n    const [taskDate, setTaskDate] = useState('');\n    const [project, setProject] = useState('');\n    const [showMain, setShowMain] = useState(showShouldMain);\n    const [showProjectOverlay, setShowProjectOverlay] = useState(false);\n    const [showTaskDate, setShowTaskDate] = useState(false);\n\n    const {selectedProject} = useSelectedProjectValue();\n\n    const addTask = () => {\n        const projectId = project || selectedProject;\n        let collatedDate = '';\n        if (projectId === 'TODAY') {\n            collatedDate = moment().format('DD/MM/YYYY');\n        } else if (projectId === 'NEXT_7') {\n            collatedDate = moment().add(7, 'days').format('DD/MM/YYYY');\n        }\n\n        return (\n            task &&\n            projectId && \n            firebase\n                .firestore()\n                .collection('tasks')\n                .add({\n                    archived: false,\n                    projectId,\n                    task,\n                    date: collatedDate || taskDate,\n                    userId: '1DEPPjvKvny4DZEsH25ur'\n                })\n                .then(() => {\n                    setTask('');\n                    setProject('');\n                    setShowMain('');\n                    setShowProjectOverlay(false);\n                })\n        );\n    }\n\n\n    return (\n        <div \n            className={showQuickAddTask ? 'add-task add-task__overlay' : 'add-task'}\n            data-testid=\"add-task-comp\"\n        >\n            {showAddTaskMain && (\n                <div className=\"add-task__shallow\" data-testid=\"show-main-action\"\n                    onClick={() => setShowMain(!showMain)}\n                    onKeyDown={() => setShowMain(!showMain)}\n                    tabIndex={0}\n                    role=\"button\"\n                >\n                    <span className=\"add-task__plus\">+</span>\n                    <span className=\"add-task__text\">Add Task</span>\n                </div>\n            )}\n\n            {(showMain || showQuickAddTask) && (\n                <div className=\"add-task__main\" data-testid=\"add-task-main\">\n                    {showQuickAddTask && (\n                        <>\n                            <div data-testid=\"quick-add-task\">\n                                <h2 className=\"header\">Quick Add Task</h2>\n                                <span className=\"add-task__cancel-x\"\n                                data-testid=\"add-task-quick-cancel\"\n                                onClick={() => {\n                                    setShowMain(false);\n                                    setShowProjectOverlay(false);\n                                    setShowQuickAddTask(false);\n                                }}\n                                onKeyDown={() => {\n                                    setShowMain(false);\n                                    setShowProjectOverlay(false);\n                                    setShowQuickAddTask(false);\n                                }}\n                                tabIndex={0}\n                                role=\"button\"\n                                >\n                                    X\n                                </span>\n                            </div>\n                        </>\n                    )}\n                    <ProjectOverlay setProject={setProject} showProjectOverlay={showProjectOverlay} setShowProjectOverlay={setShowProjectOverlay}/>\n                    <TaskDate setTaskDate={setTaskDate} showTaskDate={showTaskDate} setShowTaskDate={setShowTaskDate}/>\n                    <input className=\"add-task__content\"\n                        data-testid=\"add-task-content\"\n                        aria-label=\"Enter your task\"\n                        type=\"text\"\n                        value={task}\n                        onChange={e => setTask(e.target.value)}\n                        />\n                        <button \n                            type=\"button\"\n                            aria-label=\"Add task\"\n                            className=\"add-task__submit\"\n                            data-testid=\"add-task\"\n                            onClick={() => showQuickAddTask ? addTask() && setShowQuickAddTask(false) : addTask()}>\n                                Add Task\n                        </button>\n                        {!showQuickAddTask && (\n                            <span className=\"add-task__cancel\"\n                                data-testid=\"add-task-main-cancel\"\n                                onClick={() => {\n                                    setShowMain(false);\n                                    setShowProjectOverlay(false);\n                                }}\n                                onKeyDown={() => {\n                                    setShowMain(false);\n                                    setShowProjectOverlay(false);\n                                }}\n                                tabIndex={0}\n                                role=\"button\"\n                                aria-label=\"Cancel adding project\"\n                                >Cancel</span>\n                        )}\n                        <span className=\"add-task__project\"\n                        data-testid=\"show-project-overlay\"\n                        onClick={() => setShowProjectOverlay(!showProjectOverlay)}\n                        onKeyDown={() => setShowProjectOverlay(!showProjectOverlay)}\n                        tabIndex={0}\n                        role=\"button\"\n                        >\n                            <FaRegListAlt />\n                        </span>\n                        <span\n                            className=\"add-task__date\" \n                            data-testid=\"show-task-date-overlay\"\n                            onClick={() => setShowTaskDate(!showTaskDate)}\n                            onKeyDown={() => setShowTaskDate(!showTaskDate)}\n                            tabIndex={0}\n                            role=\"button\"\n                        >\n                            <FaRegCalendarAlt />\n                        </span>\n                </div>\n            )}\n        </div>\n    );\n};\n\n\n","import React, { useState } from 'react';\nimport {FaPizzaSlice} from 'react-icons/fa';\nimport { AddTask } from '../AddTask';\n\n\nexport const Header = ({darkMode, setDarkMode}) => {\n    const [shouldShowMain, setShouldMain] = useState(false);\n    const [showQuickAddTask, setShowQuickAddTask] = useState(false);\n\n\n    return <header className=\"header\" data-testid=\"header\">\n        <nav>\n            <div className=\"logo\">\n            </div>\n            <div className=\"settings\">\n                <ul>\n                    <li data-testid=\"quick-add-task-action\" className=\"settings__add\"\n                    >\n                    <button\n                        aria-label=\"Quick Add Task\" \n                        onClick={() => {setShowQuickAddTask(true); setShouldMain(true);}}\n                        type=\"button\"\n                        onKeyDown={() => {setShowQuickAddTask(true); setShouldMain(true);}}\n                    >\n                        +\n                    </button>\n                    </li>\n                    <li data-testid=\"dark-mode-action\" \n                        className=\"settings__darkmode\"\n                    >\n                    <button \n                        type=\"button\"\n                        aria-label=\"Dark mode on/off\"\n                        onClick={() => {setDarkMode(!darkMode)}}\n                        onKeyDown={() => {setDarkMode(!darkMode)}}\n                        >\n                        <FaPizzaSlice color=\"orange\"/>\n                        </button>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n        <AddTask \n            showAddTaskMain={false}\n            shouldShowMain={shouldShowMain}\n            showQuickAddTask={showQuickAddTask}\n            setShowQuickAddTask={setShowQuickAddTask}\n        />\n    </header>\n\n}","import React, {useState} from 'react';\nimport {FaTrashAlt} from 'react-icons/fa';\nimport {useProjectsValue, useSelectedProjectValue} from '../context';\nimport {firebase} from '../firebase';\n\nexport const IndividualProject = ({project}) => {\n    const [showConfirm, setShowConfirm] = useState(false);\n    const { projects, setProjects} = useProjectsValue();\n    const {setSelectedProject} = useSelectedProjectValue();\n\n    const deleteProject = docId => {\n        firebase.firestore().collection('projects').doc(docId)\n            .delete().then(() => {\n                setProjects([...projects]);\n                setSelectedProject('INBOX');\n            })\n    }\n    return (\n        <>\n            <span className=\"sidebar__dot\">•</span>\n            <span className=\"sidebar__project-name\">{project.name}</span>\n            <span className=\"sidebar__project-delete\" data-testid=\"delete-project\" \n            onClick={() => setShowConfirm(!showConfirm)}\n            onKeyDown={() => setShowConfirm(!showConfirm)}\n            tabIndex={0}\n            role=\"button\"\n            aria-label=\"Start for delete a project window\"\n            >\n                <FaTrashAlt />\n                {showConfirm && (\n                    <div className=\"project-delete-modal\">\n                        <div className=\"project-delete-modal__inner\">\n                            <p>Are you sure you want to delete?</p>\n                        \n                        <div>\n                            <button type=\"button\" aria-label=\"Confirm to delete project\" onClick={() => deleteProject(project.docId)}>\n                                Delete\n                            </button>\n                            <span onClick={() => setShowConfirm(!showConfirm)}\n                            onKeyDown={() => setShowConfirm(!showConfirm)}\n                            tabIndex={0}\n                            role=\"button\"\n                            aria-label=\"Cancel to delete a project\"\n                            >Cancel</span>\n                        </div>\n                        </div>\n                    </div>\n                )}\n            </span>\n        </>\n    )\n}\n","import React, {useState} from 'react'\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nimport { IndividualProject } from './individualProject';\n\nexport const Projects = ({activeValue = true}) => {\n    const [active, setActive] = useState(activeValue);\n    const {setSelectedProject} = useSelectedProjectValue();\n    const {projects} = useProjectsValue();\n    return (\n        projects && \n        projects.map(project => (\n            <li key={projects.projectId} data-doc-id={project.docId} data-testid=\"project-action\" className={\n                active === project.projectId\n                ? 'active sidebar__project'\n                : 'sidebar__project'\n            }\n            >\n            <div\n            role=\"button\"\n            tabIndex={0}\n            aria-label={`Select ${project.name} as the task project`}\n            onClick= {() => {\n                setActive(project.projectId);\n                setSelectedProject(project.projectId);\n            }}\n            onKeyDown= {() => {\n                setActive(project.projectId);\n                setSelectedProject(project.projectId);\n            }}\n            >\n                <IndividualProject project={project}/>\n            </div>\n            </li>\n        ))\n    )\n}","import React, { useState } from 'react';\nimport {firebase} from '../firebase';\nimport {generatePushId} from '../helpers';\nimport {useProjectsValue} from '../context'; \n\nexport const AddProject = ({shouldShow = false}) => {\n    const [show, setShow] = useState(shouldShow);\n    const [projectName, setProjectName] = useState('');\n\n    const projectId = generatePushId();\n    const { projects, setProjects } = useProjectsValue();\n    \n    const addProject = () => \n    projectName &&\n    firebase\n        .firestore()\n        .collection('projects')\n        .add({\n            projectId,\n            name: projectName,\n            userId: '1DEPPjvKvny4DZEsH25ur'\n        })\n        .then(() =>  {\n            setProjects([...projects]);\n            setProjectName('');\n            setShow(false);\n        });\n\n        return (\n            <div className=\"add-project\" data-testid=\"add-project\">\n                {show && (\n                    <div className=\"add-project__input\">\n                        <input value={projectName}\n                        onChange={e => setProjectName(e.target.value)}\n                        className=\"add-project__name\"\n                        data-testid=\"project-name\"\n                        type=\"text\"\n                        placeholder=\"Name your project\"\n                        />\n                        <button className=\"add-project__submit\" type=\"button\" \n                            onClick={() => addProject()}\n                            data-testid=\"add-project-submit\"\n                        >Add Project</button>\n                        <span data-testid=\"hide-project-overlay\" className=\"add-project__cancel\"\n                        onClick={() => setShow(false)}\n                        onKeyDown={() => setShow(false)} \n                        role=\"button\"\n                        tabIndex={0}\n                        aria-label=\"Cancel to add project\"\n                         >Cancel\n                         </span>\n                    </div>\n                )}\n                <span className=\"add-project__plus\">+</span>\n                    <span data-testid=\"add-project-action\" className=\"add-project__text\" \n                        onClick={() => setShow(!show)}\n                        onKeyDown={() => setShow(!show)}\n                        role=\"button\"\n                        tabIndex={0}\n                        aria-label=\"Add Project\"\n                    >Add Project</span>\n            </div>\n        )\n}","import React, { useState } from 'react';\nimport {FaChevronDown, FaInbox, FaRegCalendarAlt, FaRegCalendar} from 'react-icons/fa';\nimport { useSelectedProjectValue } from '../../context';\nimport { Projects } from '../Projects';\nimport { AddProject } from '../AddProject';\n\nfunction Sidebar() {\n    const {setSelectedProject} = useSelectedProjectValue();\n    const [active, setActive] = useState('inbox');\n    const [showProjects, setShowProjects] = useState(true);\n    return <div className=\"sidebar\" data-testid=\"sidebar\">\n    <ul className=\"sidebar__generic\">\n        <li data-testid=\"inbox\" className={active === 'inbox' ? 'active' : undefined}><div aria-label=\"Inbox\" onClick={() => {setActive('inbox'); setSelectedProject('INBOX')}} onKeyDown={() => {setActive('inbox'); setSelectedProject('INBOX')}} role=\"button\" tabIndex={0}><span><FaInbox /></span><span>Inbox</span></div></li>\n        <li data-testid=\"today\" className={active === 'today' ? 'active' : undefined}><div aria-label=\"Today Tasks\" onClick={() => {setActive('today'); setSelectedProject('TODAY')}} onKeyDown={() => {setActive('today'); setSelectedProject('TODAY')}} role=\"button\" tabIndex={0}><span><FaRegCalendar /></span><span>Today</span></div></li>\n        <li data-testid=\"next_7\" className={active === 'next_7' ? 'active' : undefined}><div aria-label=\"Next Week Tasks\" onClick={() => {setActive('next_7'); setSelectedProject('NEXT_7')}} onKeyDown={() => {setActive('next_7'); setSelectedProject('NEXT_7')}} role=\"button\" tabIndex={0}><span><FaRegCalendarAlt /></span><span>Next Week</span></div></li>\n    </ul>\n\n    <div className=\"sidebar__middle\" aria-label=\"Show Projects\" onClick={() => setShowProjects(!showProjects)}\n        onKeyDown={() => setShowProjects(!showProjects)}\n        tabIndex={0}\n        role=\"button\"\n    >\n        <span><FaChevronDown className={!showProjects ? 'hidden-projects': undefined}/></span>\n        <h2>Projects</h2>\n    </div>\n\n    <ul className=\"sidebar__projects\">{showProjects && <Projects />}</ul>\n    {showProjects && <AddProject />}\n    </div>;\n  }\n  \n  export default Sidebar;\n\n","import React from 'react';\nimport {firebase} from '../firebase';\n\nexport const Checkbox = ({id, taskDesc}) => {\n    const archiveTask = () => {\n        firebase.firestore().collection('tasks').doc(id).update({\n            archived: true,\n        })\n    };\n\n    return (\n        <div className=\"checkbox-holder\" data-testid=\"checkbox-action\"\n            aria-label=\"\"\n            onClick={() => archiveTask()}\n            onKeyDown={() => archiveTask()}\n            role=\"button\"\n            tabIndex={0}\n            aria-label={`Mark ${taskDesc} as done`}\n        >\n            <span className=\"checkbox\" />\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport {Checkbox} from './Checkbox';\nimport { useTasks } from '../hooks';\nimport {collatedTasks} from '../constants';\nimport {getTitle, getCollatedTitle, collatedTasksExist} from '../helpers';\nimport {useSelectedProjectValue, useProjectsValue} from '../context';\nimport { AddTask } from './AddTask';\n\nexport const Tasks = () => {\n    const { selectedProject} = useSelectedProjectValue();\n    const { projects} = useProjectsValue();\n    const { tasks} = useTasks(selectedProject);\n\n\n    let projectName = '';\n\n    if(projects && selectedProject && !collatedTasksExist(selectedProject)){\n        projectName = getTitle(projects, selectedProject).name;\n    }\n    if (collatedTasksExist(selectedProject) && selectedProject){\n        projectName = getCollatedTitle(collatedTasks, selectedProject).name;\n    }\n\n    useEffect(() => {\n        document.title = `${projectName}: Todolist`;\n    })\n    return (\n        <div className=\"tasks\" data-testid=\"tasks\">\n            <h2 data-testid=\"project-name\">{projectName}</h2>\n            <ul className=\"tasks__list\">\n                {tasks.map(task => (\n                    <li key={`${task.id}`}>\n                        <Checkbox id={task.id} taskDesc={task.task}/>\n                        <span>{task.task}</span>\n                    </li>\n                ))}\n            </ul>\n            <AddTask />\n        </div>\n    )\n}","import React from 'react';\nimport Sidebar from './Sidebar';\nimport {Tasks} from '../Tasks';\n\n\nexport const Content = () => {\n    return (\n        <section className=\"content\">\n        <Sidebar />\n        <Tasks />\n        </section>\n    )\n\n}","import React, {useState} from 'react';\nimport {Header} from './components/layout/Header';\nimport {Content} from './components/layout/Content';\nimport {ProjectsProvider, SelectedProjectProvider} from './context';\nimport './App.scss';\n\nexport const App = ({darkModeDefault = false}) => {\n  const [darkMode, setDarkMode] = useState(darkModeDefault);\n  return(\n    <SelectedProjectProvider>\n    <ProjectsProvider>\n    <main\n      data-testid=\"application\"\n      className={darkMode ? 'darkmode' : undefined}\n      >\n        <Header darkMode={darkMode} setDarkMode={setDarkMode}/>\n        <Content />\n    </main>\n    </ProjectsProvider>\n    </SelectedProjectProvider>\n  );\n}\n","import React from 'react';\nimport {render} from 'react-dom';\nimport {App} from './App';\n\nrender(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}